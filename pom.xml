<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>no.nsg</groupId>
    <artifactId>referenceimplementation</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <organization>
        <name>Brønnøysundregistrene</name>
        <url>https://www.brreg.no</url>
    </organization>

    <properties>
        <!--standard properties-->
        <java.version>1.8</java.version>
        <java.encoding>UTF-8</java.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.exec.skip>false</maven.exec.skip>
        <!--end standard properties-->

        <start-class>no.nsg.Application</start-class>
        <docker.image.name>nsg/referenceimplementation</docker.image.name>
        <docker.image.tag>latest</docker.image.tag>

        <unittest.category/>
        <servicetest.category/>
        <integrationtest.category/>

        <surefireArgLine/>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.9.1-4</version>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.8.0</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>1.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.28.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Generated code dependencies -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.0</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>unit-test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <unittest.category>,no.nsg.testcategories.UnitTest</unittest.category>
            </properties>
        </profile>
        <profile>
            <id>service-test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <servicetest.category>,no.nsg.testcategories.ServiceTest</servicetest.category>
            </properties>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <integrationtest.category>,no.nsg.testcategories.IntegrationTest</integrationtest.category>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
                <excludes>
                    <exclude>banner.txt</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
                <includes>
                    <include>banner.txt</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>4.1.1</version>
                <executions>
                    <execution>
                        <id>BankStatementsAPI</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openAPI/BankStatementAPI.yaml</inputSpec>
                            <skipValidateSpec>false</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <templateDirectory>${project.basedir}/src/main/resources/openAPI/openapi-generator-maven-plugin/templates/JavaSpring</templateDirectory>
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <invokerPackage>no.nsg.generated</invokerPackage>
                            <apiPackage>no.nsg.generated.bankstatements_api</apiPackage>
                            <modelPackage>no.nsg.generated.bankstatements_model</modelPackage>
                            <configOptions>
                                <allowUnicodeIdentifiers>true</allowUnicodeIdentifiers>
                                <sourceFolder>src/main/java/gen</sourceFolder>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <library>spring-boot</library>
                                <delegatePattern>false</delegatePattern>
                            </configOptions>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>InnvoiceAPI</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openAPI/InnvoiceAPI.yaml</inputSpec>
                            <skipValidateSpec>false</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <templateDirectory>${project.basedir}/src/main/resources/openAPI/openapi-generator-maven-plugin/templates/JavaSpring</templateDirectory>
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <invokerPackage>no.nsg.generated</invokerPackage>
                            <apiPackage>no.nsg.generated.invoice_api</apiPackage>
                            <modelPackage>no.nsg.generated.invoice_model</modelPackage>
                            <configOptions>
                                <allowUnicodeIdentifiers>true</allowUnicodeIdentifiers>
                                <sourceFolder>src/main/java/gen</sourceFolder>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <library>spring-boot</library>
                                <delegatePattern>false</delegatePattern>
                            </configOptions>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>TransactionAPI</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openAPI/TransactionAPI.yaml</inputSpec>
                            <skipValidateSpec>false</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <templateDirectory>${project.basedir}/src/main/resources/openAPI/openapi-generator-maven-plugin/templates/JavaSpring</templateDirectory>
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <invokerPackage>no.nsg.generated</invokerPackage>
                            <apiPackage>no.nsg.generated.transaction_api</apiPackage>
                            <modelPackage>no.nsg.generated.transaction_model</modelPackage>
                            <configOptions>
                                <allowUnicodeIdentifiers>true</allowUnicodeIdentifiers>
                                <sourceFolder>src/main/java/gen</sourceFolder>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <library>spring-boot</library>
                                <delegatePattern>false</delegatePattern>
                            </configOptions>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <testSource>${java.version}</testSource>
                    <testTarget>${java.version}</testTarget>
                    <encoding>${java.encoding}</encoding>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>

            <plugin>
                <!-- Unit test runner -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <groups>java.lang.Exception ${unittest.category} ${servicetest.category} ${integrationtest.category}
                    </groups> <!-- java.lang.Exception is a hack to make a valid comma-separated list og category classes -->
                    <argLine>${surefireArgLine} -Dfile.encoding=${java.encoding}</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.12</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag</id>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dockerfile>dockerfile</dockerfile>
                    <repository>${docker.image.name}</repository>
                    <tag>${docker.image.tag}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>

            
        </plugins>
    </build>
</project>